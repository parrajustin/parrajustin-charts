{
    "mongo-v2": {
      "healthy": true,
      "supported": true,
      "healthy_error": null,
      "location": "/__w/charts/charts/charts/mongodb-worker/mongo-v2",
      "last_update": "2023-12-24 07:44:11",
      "required_features": [
        "definitions/timezone",
        "validations/lockedHostPath",
        "definitions/gpuConfiguration",
        "normalize/ixVolume"
      ],
      "human_version": "mongo-v2",
      "version": "mongo-v2",
      "chart_metadata": {
        "name": "mongodb-worker",
        "description": "Fast, reliable, scalable, and easy to use open-source no-sql database system.",
        "type": "application",
        "version": "mongo-v2",
        "apiVersion": "v2",
        "appVersion": "7.0.4",
        "kubeVersion": ">=1.16.0-0",
        "maintainers": [
          {
            "name": "Justin P",
            "email": "contact@parrajust.in"
          }
        ],
        "dependencies": [
          {
            "name": "common",
            "repository": "file://../../../common/2304.0.1",
            "version": "2304.0.1"
          }
        ],
        "home": "https://www.mongodb.com/",
        "icon": "https://truecharts.org/img/hotlink-ok/chart-icons/mongodb.png",
        "sources": [
          "https://github.com/mongodb/mongo"
        ],
        "keywords": [
          "cameras",
          "database"
        ],
        "annotations": {
          "title": "MongoDBWorker",
          "truecharts.org/SCALE-support": "true",
          "truecharts.org/category": "cameras",
          "truecharts.org/train": "stable"
        }
      },
      "app_metadata": {
        "runAsContext": [
          {
            "userName": "root",
            "groupName": "root",
            "gid": 0,
            "uid": 0,
            "description": "mongodb worker runs as root user."
          }
        ],
        "capabilities": [
          {
            "name": "CHOWN",
            "description": "mongodb worker is able to chown files."
          },
          {
            "name": "FOWNER",
            "description": "mongodb worker is able to bypass permission checks for it's sub-processes."
          },
          {
            "name": "SYS_CHROOT",
            "description": "mongodb worker is able to use chroot."
          },
          {
            "name": "MKNOD",
            "description": "mongodb worker is able to create device nodes."
          },
          {
            "name": "DAC_OVERRIDE",
            "description": "mongodb worker is able to bypass permission checks."
          },
          {
            "name": "FSETID",
            "description": "mongodb worker is able to set file capabilities."
          },
          {
            "name": "KILL",
            "description": "mongodb worker is able to kill processes."
          },
          {
            "name": "SETGID",
            "description": "mongodb worker is able to set group ID for it's sub-processes."
          },
          {
            "name": "SETUID",
            "description": "mongodb worker is able to set user ID for it's sub-processes."
          },
          {
            "name": "SETPCAP",
            "description": "mongodb worker is able to set process capabilities."
          },
          {
            "name": "NET_BIND_SERVICE",
            "description": "mongodb worker is able to bind to privileged ports."
          },
          {
            "name": "SETFCAP",
            "description": "mongodb worker is able to set file capabilities."
          },
          {
            "name": "NET_RAW",
            "description": "mongodb worker is able to use raw sockets."
          },
          {
            "name": "AUDIT_WRITE",
            "description": "mongodb worker is able to write to audit log."
          }
        ],
        "hostMounts": []
      },
      "schema": {
        "groups": [
          {
            "name": "Configuration",
            "description": "Application configuration"
          },
          {
            "name": "Storage",
            "description": "Configure storage for the application"
          },
          {
            "name": "Networking",
            "description": "Networking Configuration for the application"
          },
          {
            "name": "Scaling/Upgrade Policy",
            "description": "Configure how pods are replaced when configuration is upgraded"
          },
          {
            "name": "Resource Limits",
            "description": "Set CPU/memory limits for the Pod"
          }
        ],
        "questions": [
          {
            "variable": "mongodbUsername",
            "label": "Database User",
            "group": "Configuration",
            "schema": {
              "type": "string",
              "default": "",
              "required": true
            }
          },
          {
            "variable": "mongodbDatabase",
            "label": "Database Name",
            "group": "Configuration",
            "schema": {
              "type": "string",
              "default": "",
              "required": true
            }
          },
          {
            "variable": "mongodbPassword",
            "label": "Database Password",
            "group": "Configuration",
            "schema": {
              "type": "string",
              "default": "",
              "required": true
            }
          },
          {
            "variable": "mongodbRootPassword",
            "label": "Root Password",
            "group": "Configuration",
            "schema": {
              "type": "string",
              "default": "",
              "required": true
            }
          },
          {
            "variable": "environmentVariables",
            "label": "Extra environment Variables for the application",
            "group": "Configuration",
            "schema": {
              "type": "list",
              "default": [],
              "items": [
                {
                  "variable": "environmentVariable",
                  "label": "Environment Variable",
                  "schema": {
                    "type": "dict",
                    "attrs": [
                      {
                        "variable": "name",
                        "label": "Name",
                        "schema": {
                          "type": "string"
                        }
                      },
                      {
                        "variable": "value",
                        "label": "Value",
                        "schema": {
                          "type": "string"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "variable": "appVolumeMounts",
            "label": "Mongodb worker Storage",
            "group": "Storage",
            "schema": {
              "type": "dict",
              "attrs": [
                {
                  "variable": "data",
                  "label": "Data Volume",
                  "schema": {
                    "type": "dict",
                    "attrs": [
                      {
                        "variable": "datasetName",
                        "label": "Data Volume Name",
                        "schema": {
                          "type": "string",
                          "$ref": [
                            "normalize/ixVolume"
                          ],
                          "show_if": [
                            [
                              "hostPathEnabled",
                              "=",
                              false
                            ]
                          ],
                          "default": "ix-mongdb_worker_data",
                          "editable": false,
                          "hidden": true
                        }
                      },
                      {
                        "variable": "mountPath",
                        "label": "Data Mount Path",
                        "description": "Path where the volume will be mounted inside the pod",
                        "schema": {
                          "type": "path",
                          "hidden": true,
                          "editable": false,
                          "default": "/data/db"
                        }
                      },
                      {
                        "variable": "hostPathEnabled",
                        "label": "Enable Host Path",
                        "schema": {
                          "type": "boolean",
                          "default": false,
                          "show_subquestions_if": true,
                          "subquestions": [
                            {
                              "variable": "hostPath",
                              "label": "Host Path for the Data Volume",
                              "schema": {
                                "type": "hostpath",
                                "required": true,
                                "$ref": [
                                  "validations/lockedHostPath"
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "variable": "extraAppVolumeMounts",
            "label": "Extra Host Path Volumes",
            "group": "Storage",
            "schema": {
              "type": "list",
              "items": [
                {
                  "variable": "extraAppVolume",
                  "label": "Host Path Volume",
                  "description": "Add an extra host path volume for the application",
                  "schema": {
                    "type": "dict",
                    "attrs": [
                      {
                        "variable": "mountPath",
                        "label": "Mount Path in Pod",
                        "description": "Path where the volume will be mounted inside the pod",
                        "schema": {
                          "type": "path",
                          "required": true
                        }
                      },
                      {
                        "variable": "hostPath",
                        "label": "Host Path",
                        "description": "Host path",
                        "schema": {
                          "type": "hostpath",
                          "required": true
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "variable": "MongodbApplicationPort",
            "group": "Networking",
            "label": "Port to expose application service",
            "schema": {
              "type": "int",
              "min": 9000,
              "max": 65535,
              "default": 27017
            }
          },
          {
            "variable": "hostNetwork",
            "label": "Enable Host Network",
            "group": "Networking",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "variable": "updateStrategy",
            "description": "Upgrade Policy",
            "label": "Update Strategy",
            "group": "Scaling/Upgrade Policy",
            "schema": {
              "type": "string",
              "default": "Recreate",
              "enum": [
                {
                  "value": "RollingUpdate",
                  "description": "Create new pods and then kill old ones"
                },
                {
                  "value": "Recreate",
                  "description": "Kill existing pods before creating new ones"
                }
              ]
            }
          },
          {
            "variable": "enableResourceLimits",
            "label": "Enable Pod resource limits",
            "group": "Resource Limits",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "variable": "cpuLimit",
            "label": "CPU Limit",
            "description": "CPU resource limit allow  plain integer values with suffix m(milli) e.g 1000m, 100.",
            "group": "Resource Limits",
            "schema": {
              "type": "string",
              "show_if": [
                [
                  "enableResourceLimits",
                  "=",
                  true
                ]
              ],
              "valid_chars": "^\\d+(?:\\.\\d+(?!.*m$)|m?$)",
              "default": "4000m"
            }
          },
          {
            "variable": "memLimit",
            "label": "Memory Limit",
            "group": "Resource Limits",
            "description": "Memory limits is specified by number of bytes. Followed by quantity suffix like E,P,T,G,M,k and Ei,Pi,Ti,Mi,Gi,Ki can also be used. e.g 129e6, 129M,  128974848000m, 123Mi",
            "schema": {
              "type": "string",
              "show_if": [
                [
                  "enableResourceLimits",
                  "=",
                  true
                ]
              ],
              "valid_chars": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
              "default": "8Gi"
            }
          }
        ]
      },
      "app_readme": "<p><h1>Fast, reliable, scalable, and easy to use open-source no-sql database system.</h1></p>",
      "detailed_readme": "<p>Fast, reliable, scalable, and easy to use open-source no-sql database system.</p>",
      "changelog": null
    }
  }